{
  "stats": {
    "suites": 6,
    "tests": 26,
    "passes": 12,
    "pending": 0,
    "failures": 14,
    "start": "2020-08-26T03:09:22.346Z",
    "end": "2020-08-26T03:09:33.451Z",
    "duration": 11105,
    "testsRegistered": 26,
    "passPercent": 46.15384615384615,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "21482d36-8298-4b10-a6fb-13beafcc0892",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26b65977-438b-4c66-95ad-9e81763fdedc",
          "title": "Jingtum测试",
          "fullFile": "E:\\2. work\\井系\\3. 链景\\井通新链\\自动测试\\codes\\jt-autotest\\test\\start.js",
          "file": "\\test\\start.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "80c0ea31-e9b8-47a3-8b8b-fcc20d9bd37f",
              "title": "测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc",
              "fullFile": "E:\\2. work\\井系\\3. 链景\\井通新链\\自动测试\\codes\\jt-autotest\\test\\start.js",
              "file": "\\test\\start.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc \"before all\" hook",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// logger.debug('before connnect')\n// await server.connect()\n// logger.debug('after connnect')",
                  "err": {},
                  "uuid": "8ce6e02a-e9db-4662-9975-610cbf474ba9",
                  "parentUUID": "80c0ea31-e9b8-47a3-8b8b-fcc20d9bd37f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "9f7f4781-05fd-48fb-8fa8-d49196be8a42",
                  "title": "is working",
                  "fullFile": "E:\\2. work\\井系\\3. 链景\\井通新链\\自动测试\\codes\\jt-autotest\\test\\start.js",
                  "file": "\\test\\start.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "0fb3bfe3-a834-462f-9323-5f628c61f0d8",
                      "title": "测试jt_blockNumber",
                      "fullFile": "E:\\2. work\\井系\\3. 链景\\井通新链\\自动测试\\codes\\jt-autotest\\test\\start.js",
                      "file": "\\test\\start.js",
                      "beforeHooks": [
                        {
                          "title": "\"before all\" hook",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_blockNumber \"before all\" hook",
                          "timedOut": false,
                          "duration": 5308,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "await framework.execEachTestCase(testCases, 0)  //NOTICE!!! the execute method must RETURN a promise, then batch mode can work!!!",
                          "err": {},
                          "uuid": "510821a9-dc02-42c5-9c81-aa14a39a3409",
                          "parentUUID": "0fb3bfe3-a834-462f-9323-5f628c61f0d8",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "0010\t查询最新区块号：发起查询请求，等待5秒或10秒（同步时间），再次发起查询请求",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_blockNumber 0010\t查询最新区块号：发起查询请求，等待5秒或10秒（同步时间），再次发起查询请求",
                          "timedOut": false,
                          "duration": 26,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 0 to be at least 1",
                            "estack": "AssertionError: expected 0 to be at least 1\n    at Object.checkFunction (test\\testCases\\tcsGetBlockNumber.js:50:75)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": "- 0\n+ 1\n"
                          },
                          "uuid": "41a17ea1-4e31-4a54-a1e9-7217c5986039",
                          "parentUUID": "0fb3bfe3-a834-462f-9323-5f628c61f0d8",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0010\t查询最新区块号",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_blockNumber 0010\t查询最新区块号",
                          "timedOut": false,
                          "duration": 31,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "0f8305d2-b962-4ca5-b22f-ee6de7e4bf64",
                          "parentUUID": "0fb3bfe3-a834-462f-9323-5f628c61f0d8",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "0f8305d2-b962-4ca5-b22f-ee6de7e4bf64"
                      ],
                      "failures": [
                        "41a17ea1-4e31-4a54-a1e9-7217c5986039"
                      ],
                      "pending": [],
                      "skipped": [],
                      "duration": 57,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 999930000
                    },
                    {
                      "uuid": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                      "title": "测试jt_getBlockByNumber",
                      "fullFile": "E:\\2. work\\井系\\3. 链景\\井通新链\\自动测试\\codes\\jt-autotest\\test\\start.js",
                      "file": "\\test\\start.js",
                      "beforeHooks": [
                        {
                          "title": "\"before all\" hook",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber \"before all\" hook",
                          "timedOut": false,
                          "duration": 3766,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "await framework.execEachTestCase(testCases, 0)  //NOTICE!!! the execute method must RETURN a promise, then batch mode can work!!!",
                          "err": {},
                          "uuid": "dc49fdf6-9865-4400-a18f-3a8a93e08b25",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "0010\t有效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0010\t有效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 25,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "f3211823-b182-45e3-ac70-3a2eb254ffec",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0020\t有效区块编号，需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0020\t有效区块编号，需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 163,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "fd556895-c373-4ac3-8723-5dd748d1265d",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0030\t有效区块编号，需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0030\t有效区块编号，需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 18,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected false to equal true",
                            "estack": "AssertionError: expected false to equal true\n    at Object.checkResponse (test\\framework\\framework.js:842:59)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:198:19)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": "- false\n+ true\n"
                          },
                          "uuid": "8de41d51-b7be-4bd0-9f51-1e5bd348e801",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0040\t有效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0040\t有效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 16,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected false to equal true",
                            "estack": "AssertionError: expected false to equal true\n    at Object.checkResponse (test\\framework\\framework.js:842:59)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:198:19)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": "- false\n+ true\n"
                          },
                          "uuid": "c6bcf040-1c75-4e5f-b329-1fe0377f7575",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0050\t有效区块编号，需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0050\t有效区块编号，需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 16,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected false to equal true",
                            "estack": "AssertionError: expected false to equal true\n    at Object.checkResponse (test\\framework\\framework.js:842:59)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:198:19)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": "- false\n+ true\n"
                          },
                          "uuid": "0e0c8082-2e62-4429-854b-c07942fce046",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0060\t有效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0060\t有效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 18,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected false to equal true",
                            "estack": "AssertionError: expected false to equal true\n    at Object.checkResponse (test\\framework\\framework.js:842:59)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:198:19)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": "- false\n+ true\n"
                          },
                          "uuid": "d873e7f8-1be5-467f-b062-533cc57ab236",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0090\t有效区块编号，需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0090\t有效区块编号，需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 16,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected false to equal true",
                            "estack": "AssertionError: expected false to equal true\n    at Object.checkResponse (test\\framework\\framework.js:842:59)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:198:19)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": "- false\n+ true\n"
                          },
                          "uuid": "33c85017-93c7-4f9b-863d-c969b8bf0dac",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0100\t有效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0100\t有效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 17,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected false to equal true",
                            "estack": "AssertionError: expected false to equal true\n    at Object.checkResponse (test\\framework\\framework.js:842:59)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:198:19)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": "- false\n+ true\n"
                          },
                          "uuid": "bb98d8b8-2251-4335-8f64-a1d639adcd48",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0110\t有效区块编号，无效Boolean参数：showFullTx是字符串",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0110\t有效区块编号，无效Boolean参数：showFullTx是字符串",
                          "timedOut": false,
                          "duration": 15,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "349f5882-3a2e-4582-a13c-1937e4bbdc4f",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0110\t有效区块编号，无效Boolean参数：showFullTx是数字",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0110\t有效区块编号，无效Boolean参数：showFullTx是数字",
                          "timedOut": false,
                          "duration": 15,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "1676f387-1c51-4a2f-922a-f0543a371418",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0110\t有效区块编号，无效Boolean参数：showFullTx是空值",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0110\t有效区块编号，无效Boolean参数：showFullTx是空值",
                          "timedOut": false,
                          "duration": 17,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "d94dcfd9-4398-48f5-aa97-2b343a565c36",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 22,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "89ad721f-a0b9-4845-9bcf-995ffe6eaeb2",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 13,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 'can\\'t find block 99900000' to include 'ledgerNotFound'",
                            "estack": "AssertionError: expected 'can\\'t find block 99900000' to include 'ledgerNotFound'\n    at Object.checkResponseError (test\\framework\\framework.js:848:32)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:214:23)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": null
                          },
                          "uuid": "df323da0-2991-4386-9a8a-5166ce2983ce",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 14,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 'strconv.ParseUint: parsing \"-1000\": invalid syntax' to include 'invalid ledger_index'",
                            "estack": "AssertionError: expected 'strconv.ParseUint: parsing \"-1000\": invalid syntax' to include 'invalid ledger_index'\n    at Object.checkResponseError (test\\framework\\framework.js:848:32)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:214:23)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": null
                          },
                          "uuid": "b55a0c54-e71c-46ec-97dd-dfba653184c6",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByNumber 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 15,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 'strconv.ParseUint: parsing \"abcdefg\": invalid syntax' to include 'invalid ledger_index'",
                            "estack": "AssertionError: expected 'strconv.ParseUint: parsing \"abcdefg\": invalid syntax' to include 'invalid ledger_index'\n    at Object.checkResponseError (test\\framework\\framework.js:848:32)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:214:23)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": null
                          },
                          "uuid": "d278589d-5230-4d28-9b41-581ee07c66c2",
                          "parentUUID": "dfb333d2-1084-46d8-b02b-2f98711a21a1",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "f3211823-b182-45e3-ac70-3a2eb254ffec",
                        "fd556895-c373-4ac3-8723-5dd748d1265d",
                        "349f5882-3a2e-4582-a13c-1937e4bbdc4f",
                        "1676f387-1c51-4a2f-922a-f0543a371418",
                        "d94dcfd9-4398-48f5-aa97-2b343a565c36",
                        "89ad721f-a0b9-4845-9bcf-995ffe6eaeb2"
                      ],
                      "failures": [
                        "8de41d51-b7be-4bd0-9f51-1e5bd348e801",
                        "c6bcf040-1c75-4e5f-b329-1fe0377f7575",
                        "0e0c8082-2e62-4429-854b-c07942fce046",
                        "d873e7f8-1be5-467f-b062-533cc57ab236",
                        "33c85017-93c7-4f9b-863d-c969b8bf0dac",
                        "bb98d8b8-2251-4335-8f64-a1d639adcd48",
                        "df323da0-2991-4386-9a8a-5166ce2983ce",
                        "b55a0c54-e71c-46ec-97dd-dfba653184c6",
                        "d278589d-5230-4d28-9b41-581ee07c66c2"
                      ],
                      "pending": [],
                      "skipped": [],
                      "duration": 400,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 999930000
                    },
                    {
                      "uuid": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                      "title": "测试jt_getBlockByHash",
                      "fullFile": "E:\\2. work\\井系\\3. 链景\\井通新链\\自动测试\\codes\\jt-autotest\\test\\start.js",
                      "file": "\\test\\start.js",
                      "beforeHooks": [
                        {
                          "title": "\"before all\" hook",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash \"before all\" hook",
                          "timedOut": false,
                          "duration": 977,
                          "state": null,
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "await framework.execEachTestCase(testCases, 0)  //NOTICE!!! the execute method must RETURN a promise, then batch mode can work!!!",
                          "err": {},
                          "uuid": "0936443b-0233-4100-b4f7-2e57bfd21d3b",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": true,
                          "skipped": false
                        }
                      ],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "0010\t有效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0010\t有效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 53,
                          "state": "passed",
                          "speed": "medium",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "fc571d68-1b31-440a-b8ba-a3bd7b5ed331",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0020\t有效区块编号，需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0020\t有效区块编号，需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 155,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "32125803-3557-42ba-b4bf-f6218ee68607",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0110\t有效区块编号，无效Boolean参数：showFullTx是字符串",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0110\t有效区块编号，无效Boolean参数：showFullTx是字符串",
                          "timedOut": false,
                          "duration": 30,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "45a00162-0ee7-4535-9de7-f9cdec502d57",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0110\t有效区块编号，无效Boolean参数：showFullTx是数字",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0110\t有效区块编号，无效Boolean参数：showFullTx是数字",
                          "timedOut": false,
                          "duration": 36,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "7d9097ef-a74b-4fa3-be35-3219ab9d82ee",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0110\t有效区块编号，无效Boolean参数：showFullTx是空值",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0110\t有效区块编号，无效Boolean参数：showFullTx是空值",
                          "timedOut": false,
                          "duration": 29,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {},
                          "uuid": "813aeefa-359c-4945-bf2b-14df57e0642c",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 48,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 'NewHash256: Wrong length 9990000000' to include 'value out of range'",
                            "estack": "AssertionError: expected 'NewHash256: Wrong length 9990000000' to include 'value out of range'\n    at Object.checkResponseError (test\\framework\\framework.js:848:32)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:214:23)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": null
                          },
                          "uuid": "9c52b4fc-b314-409d-8932-5a4ec8c89701",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 33,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 'NewHash256: Wrong length 99900000' to include 'ledgerNotFound'",
                            "estack": "AssertionError: expected 'NewHash256: Wrong length 99900000' to include 'ledgerNotFound'\n    at Object.checkResponseError (test\\framework\\framework.js:848:32)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:214:23)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": null
                          },
                          "uuid": "46665c33-046d-4c82-9ff5-9e6d941acc27",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 30,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 'encoding/hex: invalid byte: U+002D \\'-\\'' to include 'invalid ledger_index'",
                            "estack": "AssertionError: expected 'encoding/hex: invalid byte: U+002D \\'-\\'' to include 'invalid ledger_index'\n    at Object.checkResponseError (test\\framework\\framework.js:848:32)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:214:23)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": null
                          },
                          "uuid": "eebcd583-e892-4ab9-93c8-b8d8f053028b",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "0120\t无效区块编号，不需要返回所有交易详情",
                          "fullTitle": "Jingtum测试 测试模式: rpc@http://121.37.216.100:9545/v1/jsonrpc is working 测试jt_getBlockByHash 0120\t无效区块编号，不需要返回所有交易详情",
                          "timedOut": false,
                          "duration": 69,
                          "state": "failed",
                          "speed": null,
                          "pass": false,
                          "fail": true,
                          "pending": false,
                          "context": null,
                          "code": "// await testCase.checkFunction(testCase)\ntry{\n    // logger.debug('===before checkFunction')\n    // logger.debug('hasExecuted: ' + testCase.hasExecuted)\n    framework.printTestCaseInfo(testCase)\n    await testCase.checkFunction(testCase)\n    // logger.debug('===after checkFunction')\n    framework.afterTestFinish(testCase)\n}\ncatch(ex){\n    framework.afterTestFinish(testCase)\n    throw ex\n}",
                          "err": {
                            "message": "AssertionError: expected 'encoding/hex: invalid byte: U+0067 \\'g\\'' to include 'invalid ledger_index'",
                            "estack": "AssertionError: expected 'encoding/hex: invalid byte: U+0067 \\'g\\'' to include 'invalid ledger_index'\n    at Object.checkResponseError (test\\framework\\framework.js:848:32)\n    at Object.checkBlock [as checkFunction] (test\\testCases\\tcsGetBlock.js:214:23)\n    at Context.<anonymous> (test\\framework\\framework.js:645:40)",
                            "diff": null
                          },
                          "uuid": "43f4cb8f-5a2e-45c9-b1a2-294ebbef91c8",
                          "parentUUID": "424a816a-50d9-40ce-97a7-8a89ba7f157d",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "fc571d68-1b31-440a-b8ba-a3bd7b5ed331",
                        "32125803-3557-42ba-b4bf-f6218ee68607",
                        "45a00162-0ee7-4535-9de7-f9cdec502d57",
                        "7d9097ef-a74b-4fa3-be35-3219ab9d82ee",
                        "813aeefa-359c-4945-bf2b-14df57e0642c"
                      ],
                      "failures": [
                        "9c52b4fc-b314-409d-8932-5a4ec8c89701",
                        "46665c33-046d-4c82-9ff5-9e6d941acc27",
                        "eebcd583-e892-4ab9-93c8-b8d8f053028b",
                        "43f4cb8f-5a2e-45c9-b1a2-294ebbef91c8"
                      ],
                      "pending": [],
                      "skipped": [],
                      "duration": 483,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 999930000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 999930000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 999930000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 999930000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}