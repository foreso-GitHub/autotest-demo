测试类型,用例编号,用例编号（新）,用例标题,预置条件,输入,预期结果,测试结果,失败原因
不同硬件环境下的性能测试,0010,Perf_Test_Under_Diff_HW_000010,5共识节点、1Gb互联,5台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,向每个共识节点发送交易（每秒100个），持续十分钟；之后每个节点每秒增加100个交易，再持续十分钟；之后每隔十分钟每个节点每秒再增加100个交易，如此往复,观察TPS达到多少后，不能够在指定的出块时间内完成出块，依此获得能够稳定出块的最大TPS,,
,0020,Perf_Test_Under_Diff_HW_000020,5共识节点（提升硬件）、1Gb互联,5台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,依次提升节点服务器的CPU、内存、硬盘性能配置，按照用例0010的要求进行性能测试,随着硬件性能的提升，能够稳定出块的最大TPS应该也有所提升,,
,0030,Perf_Test_Under_Diff_HW_000030,5共识节点、1Gb互联（不同出块时间）,5台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,调整出块时间，进行压测,观察不同的出块时间，能够稳定出块的最大TPS是否一致,,
,0040,Perf_Test_Under_Diff_HW_000040,7共识节点、1Gb互联,7台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,向每个共识节点发送交易（每秒70个），持续十分钟；之后每个节点每秒增加70个交易，再持续十分钟；之后每隔十分钟每个节点每秒再增加70个交易，如此往复,观察TPS达到多少后，不能够在指定的出块时间内完成出块，依此获得能够稳定出块的最大TPS（应该比5共识节点的最大TPS要低）,,
,0050,Perf_Test_Under_Diff_HW_000050,7共识节点（提升硬件）、1Gb互联,7台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,依次提升节点服务器的CPU、内存、硬盘性能配置，按照用例0030的要求进行性能测试,随着硬件性能的提升，能够稳定出块的最大TPS应该也有所提升,,
,0060,Perf_Test_Under_Diff_HW_000060,7共识节点、1Gb互联,7台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,调整出块时间，进行压测,观察不同的出块时间，能够稳定出块的最大TPS是否一致,,
,0070,Perf_Test_Under_Diff_HW_000070,9共识节点、1Gb互联,9台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,向每个共识节点发送交易（每秒50个），持续十分钟；之后每个节点每秒增加50个交易，再持续十分钟；之后每隔十分钟每个节点每秒再增加50个交易，如此往复,观察TPS达到多少后，不能够在指定的出块时间内完成出块，依此获得能够稳定出块的最大TPS（应该比7共识节点的最大TPS要低）,,
,0080,Perf_Test_Under_Diff_HW_000080,9共识节点、1Gb互联,9台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,依次提升节点服务器的CPU、内存、硬盘性能配置，按照用例0050的要求进行性能测试,随着硬件性能的提升，能够稳定出块的最大TPS应该也有所提升,,
,0090,Perf_Test_Under_Diff_HW_000090,9共识节点、1Gb互联,9台硬件、软件配置一致的服务器作为共识节点；通过1Gb交换机互联,调整出块时间，进行压测,观察不同的出块时间，能够稳定出块的最大TPS是否一致,,
,0100,Perf_Test_Under_Diff_HW_000100,5共识节点、10Gb互联,5台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,向每个共识节点发送交易（每秒100个），持续十分钟；之后每个节点每秒增加100个交易，再持续十分钟；之后每隔十分钟每个节点每秒再增加100个交易，如此往复,观察TPS达到多少后，不能够在指定的出块时间内完成出块，依此获得能够稳定出块的最大TPS,,
,0110,Perf_Test_Under_Diff_HW_000110,5共识节点（提升硬件）、10Gb互联,5台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,依次提升节点服务器的CPU、内存、硬盘性能配置，按照用例0070的要求进行性能测试,随着硬件性能的提升，能够稳定出块的最大TPS应该也有所提升,,
,0120,Perf_Test_Under_Diff_HW_000120,5共识节点、10Gb互联,5台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,调整出块时间，进行压测,观察不同的出块时间，能够稳定出块的最大TPS是否一致,,
,0130,Perf_Test_Under_Diff_HW_000130,7共识节点、10Gb互联,7台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,向每个共识节点发送交易（每秒70个），持续十分钟；之后每个节点每秒增加70个交易，再持续十分钟；之后每隔十分钟每个节点每秒再增加70个交易，如此往复,观察TPS达到多少后，不能够在指定的出块时间内完成出块，依此获得能够稳定出块的最大TPS（应该比5共识节点的最大TPS要低）,,
,0140,Perf_Test_Under_Diff_HW_000140,7共识节点（提升硬件）、10Gb互联,7台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,依次提升节点服务器的CPU、内存、硬盘性能配置，按照用例0090的要求进行性能测试,随着硬件性能的提升，能够稳定出块的最大TPS应该也有所提升,,
,0150,Perf_Test_Under_Diff_HW_000150,7共识节点、10Gb互联,7台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,调整出块时间，进行压测,观察不同的出块时间，能够稳定出块的最大TPS是否一致,,
,0160,Perf_Test_Under_Diff_HW_000160,9共识节点、10Gb互联,9台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,向每个共识节点发送交易（每秒50个），持续十分钟；之后每个节点每秒增加50个交易，再持续十分钟；之后每隔十分钟每个节点每秒再增加50个交易，如此往复,观察TPS达到多少后，不能够在指定的出块时间内完成出块，依此获得能够稳定出块的最大TPS（应该比7共识节点的最大TPS要低）,,
,0170,Perf_Test_Under_Diff_HW_000170,9共识节点、10Gb互联,9台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,依次提升节点服务器的CPU、内存、硬盘性能配置，按照用例0110的要求进行性能测试,随着硬件性能的提升，能够稳定出块的最大TPS应该也有所提升,,
,0180,Perf_Test_Under_Diff_HW_000180,9共识节点、10Gb互联,9台硬件、软件配置一致的服务器作为共识节点；通过10Gb交换机互联,调整出块时间，进行压测,观察不同的出块时间，能够稳定出块的最大TPS是否一致,,
,,,,,,,,
同一硬件环境下的性能测试（5节点环境，也可在更多节点的环境测试）,0010,Perf_Test_Under_Same_HW_000010,同一账户向同一节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,同一账户向同一节点连续发送有效交易（不带memo），不断增加每秒发送次数,观察在指定出块时间内，最大TPS能达到多少,,
,0020,Perf_Test_Under_Same_HW_000020,同一账户向2个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,同一账户向2个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0030,Perf_Test_Under_Same_HW_000030,同一账户向3个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,同一账户向3个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0040,Perf_Test_Under_Same_HW_000040,同一账户向4个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,同一账户向4个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0050,Perf_Test_Under_Same_HW_000050,同一账户向5个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,同一账户向5个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0060,Perf_Test_Under_Same_HW_000060,不同账户向同一节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,不同账户向同一节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0070,Perf_Test_Under_Same_HW_000070,不同账户向2个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,不同账户向2个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0080,Perf_Test_Under_Same_HW_000080,不同账户向3个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,不同账户向3个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0090,Perf_Test_Under_Same_HW_000090,不同账户向4个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,不同账户向4个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0100,Perf_Test_Under_Same_HW_000100,不同账户向5个不同的节点连续发送交易（不带memo）测试性能上限,各节点运行正常，链出块正常,不同账户向5个不同的节点连续发送有效交易（不带memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0110,Perf_Test_Under_Same_HW_000110,同一账户向同一节点连续发送交易（带8字节memo）测试性能上限,各节点运行正常，链出块正常,同一账户向同一节点连续发送有效交易（带8字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0120,Perf_Test_Under_Same_HW_000120,不同账户向5个不同的节点连续发送交易（带8字节memo）测试性能上限,各节点运行正常，链出块正常,不同账户向5个不同的节点连续发送有效交易（带8字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0130,Perf_Test_Under_Same_HW_000130,同一账户向同一节点连续发送交易（带64字节memo）测试性能上限,各节点运行正常，链出块正常,同一账户向同一节点连续发送有效交易（带64字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0140,Perf_Test_Under_Same_HW_000140,不同账户向5个不同的节点连续发送交易（带64字节memo）测试性能上限,各节点运行正常，链出块正常,不同账户向5个不同的节点连续发送有效交易（带64字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0150,Perf_Test_Under_Same_HW_000150,同一账户向同一节点连续发送交易（带512字节memo）测试性能上限,各节点运行正常，链出块正常,同一账户向同一节点连续发送有效交易（带512字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0160,Perf_Test_Under_Same_HW_000160,不同账户向5个不同的节点连续发送交易（带512字节memo）测试性能上限,各节点运行正常，链出块正常,不同账户向5个不同的节点连续发送有效交易（带512字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0170,Perf_Test_Under_Same_HW_000170,同一账户向同一节点连续发送交易（带4096字节memo）测试性能上限,各节点运行正常，链出块正常,同一账户向同一节点连续发送有效交易（带4096字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0180,Perf_Test_Under_Same_HW_000180,不同账户向5个不同的节点连续发送交易（带4096字节memo）测试性能上限,各节点运行正常，链出块正常,不同账户向5个不同的节点连续发送有效交易（带4096字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0190,Perf_Test_Under_Same_HW_000190,同一账户向同一节点连续发送交易（带32768字节memo）测试性能上限,各节点运行正常，链出块正常,同一账户向同一节点连续发送有效交易（带32768字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0200,Perf_Test_Under_Same_HW_000200,不同账户向5个不同的节点连续发送交易（带32768字节memo）测试性能上限,各节点运行正常，链出块正常,不同账户向5个不同的节点连续发送有效交易（带32768字节memo）,观察在指定出块时间内，最大TPS能达到多少,,
,0210,Perf_Test_Under_Same_HW_000210,性能测试时加入无效交易,各节点运行正常，链出块正常,针对0010~0200测试用例，在完成性能测试后，在发送的交易内混入无效交易（余额不足、fee不够等情况）,观察链是否能正确处理有效和无效交易，TPS不受大的影响,,
,0220,Perf_Test_Under_Same_HW_000220,性能测试时更换交易方式,各节点运行正常，链出块正常,测试0010~0200用例时，如果选用的是jt_sendTransaction发起交易，则此处换成jt_signTransaction再重新测试一遍；反之亦然,观察交易方式更换后，TPS的变化并记录之,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
,,,,,,,,
